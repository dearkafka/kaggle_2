{
    "contents" : "library(readr); library(xgboost); require(data.table); require(Metrics)\n\nrm(list = ls())\n\n# Set a random seed for reproducibility\n\nset.seed(12202015)\n\ntrain <- fread(\"C:\\\\Users\\\\amulya\\\\Documents\\\\Kaggle\\\\PRUDENTIAL\\\\Data\\\\train.csv\", data.table = F)\n\ntest  <- read_csv(\"C:\\\\Users\\\\amulya\\\\Documents\\\\Kaggle\\\\PRUDENTIAL\\\\Data\\\\test.csv\")\n\nfeature.names <- names(train)[2:ncol(train)-1]\n\ncat(\"assuming text variables are categorical & replacing them with numeric ids\\n\")\n\nfor (f in feature.names) {\n\n    if (class(train[[f]])==\"character\") {\n  \n        levels <- unique(c(train[[f]], test[[f]]))\n    \n        train[[f]] <- as.integer(factor(train[[f]], levels=levels))\n    \n        test[[f]]  <- as.integer(factor(test[[f]],  levels=levels))\n  }\n}\n\nresponse <- train$Response\n\ntrain$Response <- NULL\n\ntmp <- rbind(train, test)\n\ntmp[is.na(tmp)] <- -1\n\ntrain <- tmp[c(1:59381),]\n\ntest <- tmp[c(59382:79146),]\n\n\ncat(\"training a XGBoost classifier\\n\")\n\nevalerror <- function(preds, dtrain) {\n\n    labels <- getinfo(dtrain, \"label\")\n\n    err <- ScoreQuadraticWeightedKappa(labels,round(preds))\n  \n    return(list(metric = \"kappa\", value = err))\n    \n    }\n\n\nxgbtrain <- xgb.DMatrix(data.matrix(train[, -c(1)]) , label = response )\n\n\nparam <- list(eta         = 0.02, \n              \n              depth       = 21,\n              \n              nrounds     = 4000, \n              \n              objective   = \"count:poisson\", \n              \n              colsample_bytree=0.65, \n              \n              min_child_weight=3, \n              \n              subsample=0.7, \n              \n              eval_metric = \"rmse\"\n)                             \n\n\nclf <- xgboost(data        = data.matrix(train[,feature.names]),\n               label       = train$Response,\n               eta         = 0.02,\n               depth       = 21,\n               nrounds     = 4000,\n               objective   = \"count:poisson\",\n               eval_metric = \"rmse\",colsample_bytree=0.65,min_child_weight=3,subsample=0.7)\n\ncat(\"making predictions\\n\")\n\nsubmission <- data.frame(Id=test$Id)\n\nsubmission$Response <- as.integer(round(predict(clf, data.matrix(test[,feature.names]))))\n\n# I pretended this was a regression problem and some predictions may be outside the range\n\nsubmission[submission$Response<1, \"Response\"] <- 1\n\nsubmission[submission$Response>8, \"Response\"] <- 8\n\nsubmission[submission$Response==3,\"Response\"] <- 2\n\ncat(\"saving the submission file\\n\")\n\nwrite_csv(submission, \"C:\\\\Users\\\\amulya\\\\Documents\\\\Kaggle\\\\PRUDENTIAL\\\\submission\\\\12202015_1.csv\")\n",
    "created" : 1450589677557.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "256278224",
    "id" : "DAEC58D8",
    "lastKnownWriteTime" : 1450597927,
    "path" : "~/Kaggle/PRUDENTIAL/version_control/12202015.R",
    "project_path" : "version_control/12202015.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}