names(test)
test$Dept_Desc <- NULL
test$str_len <- NULL
test$num_wrd <- NULL
train$num_wrd <- NULL
train$str_len <- NULL
train$Dept_Desc <- NULL
require(xgboost); require(readr); require(caret); require(doParallel); require(data.table); require(FeatureHashing); require(sqldf); require(dplyr)
tmp_new <- rbind(train, test)
tmp_1 <- read_csv("D:/kaggle/walmart_seg/Data/train.csv")[-1]
tmp_2 <- read_csv("D:/kaggle/walmart_seg/Data/test.csv")
tmp <- rbind(tmp_1, tmp_2)
tmp_str <- data.frame((tmp[ , "DepartmentDescription"]))
tmp_str[is.na(tmp_str)] <- 0
names(tmp_str) = ("Dept_Desc")
i <- sapply(tmp_str, is.factor)
tmp_str[i] <- lapply(tmp_str[i], as.character)
tmp_str[, paste0("str_len")] <-  nchar(x = tmp_str$Dept_Desc)
# calculate number of words
tmp_str$Dept_Desc <- gsub(' {2,}',' ', tmp_str$Dept_Desc)
lnth <- rep(0, nrow(tmp_str))
for(i in 1:nrow(tmp_str)) {
lnth[i] <-  length(strsplit(tmp_str$Dept_Desc[i],' ')[[1]])
}
tmp_str$num_wrd <- lnth
rm(tmp); rm(tmp_1); rm(tmp_2)
tmp_new = cbind.data.frame(tmp_new, tmp_str)
gc()
rm(train); rm(test)
gc()
train <- tmp_new[c(1:647054),]
test <- tmp_new[c(647055:1300700),]
dim(train); dim(test)
gc()
rm(test_raw); rm(train_raw); rm(cl);rm(class_new); rm(class_old); rm(depth); rm(cnames); rm(dtrain); rm(dval)
rm(eta); rm(f); rm(feature.names); rm(i); rm(j); rm(len); rm(levels); rm(nam); rm(name); rm(numberOfClasses)
rm(start); rm(time_taken); rm(watchlist); rm(my.f2cnt); rm(my.f3cnt); rm(tmp_str); rm(tmp_new)
rm(lnth)
gc()
feature.names <- names(train)[-c(179, 536, 537, 538) ]
require(xgboost); require(readr); require(caret); require(doParallel); require(data.table); require(FeatureHashing); require(sqldf); require(dplyr)
set.seed(11102015)
split <- createDataPartition(y = train_raw$TripType, p = 0.9, list = F)
feature.names <- names(train)[-179 ]
tra <- train[, feature.names]
dval <- xgb.DMatrix( data = data.matrix(tra[-split,]),  label = response_val )
require(xgboost); require(readr); require(caret); require(doParallel); require(data.table); require(FeatureHashing); require(sqldf); require(dplyr)
clf <- xgb.load(modelfile = "D:/kaggle/walmart_seg/models/clf_18_0.03.R")
pred <- predict(clf, data.matrix(test[, feature.names]))
pred <- matrix(pred, nrow=38, ncol=length(pred)/38) #there are total 38 classes
pred <-  data.frame(t(pred))
sample <- read_csv("D:/kaggle/walmart_seg/Data/sample_submission.csv")
cnames <- names(sample)[2:ncol(sample)]
names(pred) <- cnames
submission <- cbind.data.frame(VisitNumber = visit_num , pred)
submission <- setDT(submission)
submission <- (submission[ , lapply(.SD, mean), by = VisitNumber])
write_csv(submission, "D:/kaggle/walmart_seg/submission/11132015.csv")
clf <- xgb.load(modelfile = "D:/kaggle/walmart_seg/models/clf_16_0.03.R")
pred <- predict(clf, data.matrix(test[, feature.names]))
pred <- matrix(pred, nrow=38, ncol=length(pred)/38) #there are total 38 classes
pred <-  data.frame(t(pred))
sample <- read_csv("D:/kaggle/walmart_seg/Data/sample_submission.csv")
cnames <- names(sample)[2:ncol(sample)]
names(pred) <- cnames
submission <- cbind.data.frame(VisitNumber = visit_num , pred)
submission <- setDT(submission)
submission <- (submission[ , lapply(.SD, mean), by = VisitNumber])
write_csv(submission, "D:/kaggle/walmart_seg/submission/11132015_1.csv")
names(test)
test$Dept_Desc <- NULL
test$str_len <- NULL
test$num_wrd <- NULL
train$num_wrd <- NULL
train$str_len <- NULL
train$Dept_Desc <- NULL
require(xgboost); require(readr); require(caret); require(doParallel); require(data.table); require(FeatureHashing); require(sqldf); require(dplyr)
tmp_new <- rbind(train, test)
rm(train); rm(test)
gc()
train <- tmp_new[c(1:647054),]
test <- tmp_new[c(647055:1300700),]
dim(train); dim(test)
gc()
rm(tmp_new)
rm(submission); rm(pred); rm(sample)
require(xgboost); require(readr); require(caret); require(doParallel); require(data.table); require(FeatureHashing); require(sqldf); require(dplyr)
set.seed(11102015)
feature.names <- names(train)[-c(179) ]
tra <- train[, feature.names]
split <- createDataPartition(y = train_raw$TripType, p = 0.9, list = F)
response_val <- train_raw$TripType[-split]
response_train <- train_raw$TripType[split]
dval <- xgb.DMatrix( data = data.matrix(tra[-split,]),  label = response_val )
dtrain <- xgb.DMatrix( data = data.matrix(tra[split,]), label = response_train)
#sum(is.na(train)); sum(is.na(test)) # test if found NA error
watchlist <- list(val=dval, train=dtrain)
numberOfClasses <- max(train_raw$TripType) + 1
numberOfClasses
param <- list(objective = "multi:softprob",
eval_metric = "mlogloss",
num_class = numberOfClasses,
max_depth = 16,
eta = 0.03,
colsample_bytree = 0.8,
subsample = 0.8
)
gc()
cl <- makeCluster(detectCores()); registerDoParallel(cl)
rm(clf)
start <- Sys.time()
#############################################################################################################
clf <- xgb.train(params = param, data = dtrain, nrounds = 100, watchlist = watchlist,
verbose = 1, maximize = T, nthread = 2)
time_taken <- Sys.time() - start
paste0("D:/kaggle/walmart_seg/models/", "clf","_", 11142015, "_", ".R")
xgb.save(clf, paste0("D:/kaggle/walmart_seg/models/", "clf","_", 11142015, ".R") )
time_taken
pred <- predict(clf, data.matrix(test[, feature.names]))
pred <- matrix(pred, nrow=38, ncol=length(pred)/38) #there are total 38 classes
pred <-  data.frame(t(pred))
sample <- read_csv("D:/kaggle/walmart_seg/Data/sample_submission.csv")
cnames <- names(sample)[2:ncol(sample)]
names(pred) <- cnames
submission <- cbind.data.frame(VisitNumber = visit_num , pred)
submission <- setDT(submission)
submission <- (submission[ , lapply(.SD, mean), by = VisitNumber])
write_csv(submission, "D:/kaggle/walmart_seg/submission/11142015_1.csv")
ptrain <- predict(clf, dtrain, outputmargin = T)
setinfo(dtrain, "base_margin", ptrain)
paste0("D:/kaggle/walmart_seg/models/", "clf","_", 11142015, "_200", ".R")
clf_extra <- xgboost(params = param, data = dtrain, nround = 100, verbose = 1, nthread = 2,
maximize = T)
xgb.save(clf_extra, paste0("D:/kaggle/walmart_seg/models/", "clf","_", 11142015, "_200", ".R") )
pred <- predict(clf, data.matrix(test[, feature.names]))
pred <- matrix(pred, nrow=38, ncol=length(pred)/38) #there are total 38 classes
pred <-  data.frame(t(pred))
sample <- read_csv("D:/kaggle/walmart_seg/Data/sample_submission.csv")
cnames <- names(sample)[2:ncol(sample)]
names(pred) <- cnames
submission <- cbind.data.frame(VisitNumber = visit_num , pred)
submission <- setDT(submission)
submission <- (submission[ , lapply(.SD, mean), by = VisitNumber])
write_csv(submission, "D:/kaggle/walmart_seg/submission/11152015_1.csv")
pred <- predict(clf_extra, data.matrix(test[, feature.names]))
pred <- matrix(pred, nrow=38, ncol=length(pred)/38) #there are total 38 classes
pred <-  data.frame(t(pred))
sample <- read_csv("D:/kaggle/walmart_seg/Data/sample_submission.csv")
cnames <- names(sample)[2:ncol(sample)]
names(pred) <- cnames
submission <- cbind.data.frame(VisitNumber = visit_num , pred)
submission <- setDT(submission)
submission <- (submission[ , lapply(.SD, mean), by = VisitNumber])
write_csv(submission, "D:/kaggle/walmart_seg/submission/11152015_2.csv")
rm(list = ls())
